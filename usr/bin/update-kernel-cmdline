#!/bin/bash

# Kernel parameters
PARAMS=("zswap.enabled=0" "nowatchdog" "threadirqs" "usbhid.kbpoll=1" "usbhid.jspoll=1" "usbhid.mousepoll=1")

# Check if the CPU architecture is Zen2 or above and add the amd-pstate=active parameter if true
MARCH=$(gcc -Q -march=native --help=target | grep -m1 march= | awk '{print toupper($2)}')

if [[ "$MARCH" == "ZNVER2" || "$MARCH" == "ZNVER3" || "$MARCH" == "ZNVER4" ]]; then
    PARAMS+=("amd-pstate=active")
fi

update_parameters() {
    # Get the existing kernel parameters from the configuration file and remove any duplicates
    EXISTING_PARAMS=$(grep -Po "(?<=${2}=\")[^\"]*" "$1" | awk '{$1=$1};1')
    for PARAM in "${PARAMS[@]}"; do
        PARAM_ANY=${PARAM%%=*} # Extract the parameter name without the value
        # Remove any existing instances of the parameter (with or without a value) from the list
        EXISTING_PARAMS=$(echo "$EXISTING_PARAMS" | sed -E "s/\b${PARAM_ANY//\\/\\\\}(=[^[:space:]]+)?\b//g" | tr -s ' ')
        # Add the parameter (with value) to the list
        EXISTING_PARAMS+="${PARAM} "
    done
    # Remove any leading or trailing whitespace from the list and update the configuration file
    EXISTING_PARAMS=$(echo "$EXISTING_PARAMS" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
    sed -i "s/^${2}=\"[^\"]*\"$/${2}=\"$EXISTING_PARAMS\"/" "$1"
}

# Check if the configuration files exist and update the kernel parameters
if [[ -f "/etc/sdboot-manage.conf" ]]; then
    update_parameters "/etc/sdboot-manage.conf" "LINUX_OPTIONS"
    if command -v sdboot-manage &>/dev/null; then
        sudo sdboot-manage gen
    fi
fi

if [[ -f "/etc/default/grub" ]]; then
    update_parameters "/etc/default/grub" "GRUB_CMDLINE_LINUX_DEFAULT"
    if command -v grub-mkconfig &>/dev/null; then
        sudo grub-mkconfig -o /boot/grub/grub.cfg
    fi
fi

if [[ -f "/boot/efi/EFI/refind/refind.conf" ]]; then
    update_parameters "/boot/efi/EFI/refind/refind.conf" "options"
fi
